1. Refactor: AnswerReturn and Pick  (then every oth todo will be easyier)
  * Add other info to Text
  * PlotStat dans AnswerReturn 520, make it in answer frame and not plot
  * Get Ellipse in legacy
    * First create legacy button
    * And make ellipse work
    * 

2. SthrelImage discirminator: Sthrel is just a wrapper, join them ?

3. Pick -> pick.Pick, a class with pick information for gui.
  Then answer Return must be divided
        Old * Move Profile in analisys
  Get radio button Pick consisten (just one tkvar)

* Photometric error where are you ? 

# Bug

* Manual photometry not working
* Image cut 99.9 % (futher more it is cumulative)

# UI

* Skin: create entrybutton, and checkbutton (because cannto see in dark)
* make shortcut appear on mouse_on <ctrl-o> for example

# Easy win

* Read_Header to BackEnd (see deps_2.png)
* put image info in abism state (and not root) 
* rename image -> image_info

# Refactor

# Feature

* delete lru_cache for ipython: https://stackoverflow.com/questions/40273767/clear-all-lru-cache-in-python/50699209
  * toherwise cannot call async more than onces

# Latter
################################################################################

## Latter feature
* Datacube if more than 3 dimension
* Argument parsing, link with AbismState
* (Hard 5h) Embed jupyter client to speak to a kernel in tk loop

### Latter fix
* !!! Bad pixels !! You cannot release putting them to zero
* More options, test my stuff
* Destroy cleanly, no matplotlib error should trigger

### Latter refactor
* frame_text, optionFrame many function, create subclass like optionElement
* frame_tex, base class has getten big

# Always possible

* Better documentation
* More colorscheme and better interface to choose
* Better preference saving, loading
  * Appdir module
  * In util, parse_argument and restart
* Clean code (especially backend)
  * Beware the magic (FrameText 22, xtermTk, fontsize)
  * Consistent naming
* Matplotlib super keyboard navigation (did not manage today to get key event only in my frame)
* Feature: show bad pixels: can be usefull for an observatro (example if object is on it: change telescope orientation)
* UI: Add some colorscheme (material)
