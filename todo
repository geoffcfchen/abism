* Add fit param button only if fit param are present (see ellipse)
  * Ellipse pick answer should delete fit param: I may give stat in place

* Binary add fwhm (Strehl.py)

* Sky: see how is is estimated annulus and 8rect, because it must be feeded to fit but depends on fit
* Phot: are bad pixels correccted for elliptical apertue

* Bug: Manual cut and change image 


# Feature

* Get a save log button to save all work until here (and delete it from RAM)

## Feature -> Improve fit quality, robustness

* Stop fit if more than 10s or user kill, or make a stop fit button
* Make the fit a little longer, better result (cannot do apprently)


# Latter
################################################################################

# Refactor

* root_window containt and not extend a tk_Tk (better for ipy)
  * Warning, some get_root().bind_all need it to bee the oldest ancestor

* SthrelImage discirminator: Sthrel is just a wrapper, join them ?

## Latter feature

* 5h Get error for all answer, append them at the same time
* 3h Argument parsing, link with AbismState
* (Hard 5h) Embed jupyter client to speak to a kernel in tk loop
* 1h Ellipse 
* 2h Datacube if more than 3 dimension
* 2h TightBinary
  * Anisoplanetism = false: otherwise more degenerated, or think of it, give user the choice
* Have a glimps at first guess which is really really important, especially for moffat
* Stat and Profile type Answer to be able to convert to sky, and to get an error


### Latter fix
* !!! Bad pixels !! You cannot release putting them to zero
* More options, test my stuff
* Zomming is recurvise and get stuck in some images (bottom)

### Latter refactor
* frame_text, optionFrame many function, create subclass like optionElement
* frame_text, base class has getten big


# Idea
######################################################################

* Saturation, with a max parameter cutting pixels higher (in base fit class)
* Theta profile, profile along the major axis
* Contrast Map, image with constrat as intensity
* Recursive annulus phot

# Always possible
################################################################################

* Better documentation
* More colorscheme and better interface to choose
* Better preference saving, loading
  * Appdir module
  * In util, parse_argument and restart
  * Log previous work, result
  * Repeatable calculus
* Clean code (especially backend)
  * Lint all
  * Beware the magic (FrameText 22, xtermTk, fontsize)
  * Consistent naming
* Matplotlib super keyboard navigation (did not manage today to get key event only in my frame)
* Feature: show bad pixels: can be usefull for an observator (example if object is on it: change telescope orientation)
* UI: Add some colorscheme (material)
